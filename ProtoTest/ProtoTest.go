// Code generated by protoc-gen-go.
// source: msg2.proto
// DO NOT EDIT!

/*
Package ProtoTest is a generated protocol buffer package.

It is generated from these files:
	msg2.proto

It has these top-level messages:
	SkillInfo
	BulletBorn
	BulletMove
	AttackAction
	Hit
	PlayerInfo
	ObjInfo
	SkillObjInfo
	FrameInfo
*/
package ProtoTest

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SkillInfo struct {
	Pid     int32 `protobuf:"varint,1,opt,name=pid" json:"pid,omitempty"`
	Skillid int32 `protobuf:"varint,2,opt,name=skillid" json:"skillid,omitempty"`
}

func (m *SkillInfo) Reset()                    { *m = SkillInfo{} }
func (m *SkillInfo) String() string            { return proto.CompactTextString(m) }
func (*SkillInfo) ProtoMessage()               {}
func (*SkillInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SkillInfo) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *SkillInfo) GetSkillid() int32 {
	if m != nil {
		return m.Skillid
	}
	return 0
}

type BulletBorn struct {
	Id float32 `protobuf:"fixed32,1,opt,name=id" json:"id,omitempty"`
	X  float32 `protobuf:"fixed32,2,opt,name=x" json:"x,omitempty"`
	Y  float32 `protobuf:"fixed32,3,opt,name=y" json:"y,omitempty"`
	Z  float32 `protobuf:"fixed32,4,opt,name=z" json:"z,omitempty"`
	V  float32 `protobuf:"fixed32,5,opt,name=v" json:"v,omitempty"`
}

func (m *BulletBorn) Reset()                    { *m = BulletBorn{} }
func (m *BulletBorn) String() string            { return proto.CompactTextString(m) }
func (*BulletBorn) ProtoMessage()               {}
func (*BulletBorn) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *BulletBorn) GetId() float32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BulletBorn) GetX() float32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *BulletBorn) GetY() float32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *BulletBorn) GetZ() float32 {
	if m != nil {
		return m.Z
	}
	return 0
}

func (m *BulletBorn) GetV() float32 {
	if m != nil {
		return m.V
	}
	return 0
}

type BulletMove struct {
	Id      float32 `protobuf:"fixed32,1,opt,name=id" json:"id,omitempty"`
	X       float32 `protobuf:"fixed32,2,opt,name=x" json:"x,omitempty"`
	Y       float32 `protobuf:"fixed32,3,opt,name=y" json:"y,omitempty"`
	Z       float32 `protobuf:"fixed32,4,opt,name=z" json:"z,omitempty"`
	V       float32 `protobuf:"fixed32,5,opt,name=v" json:"v,omitempty"`
	Deleted bool    `protobuf:"varint,6,opt,name=deleted" json:"deleted,omitempty"`
}

func (m *BulletMove) Reset()                    { *m = BulletMove{} }
func (m *BulletMove) String() string            { return proto.CompactTextString(m) }
func (*BulletMove) ProtoMessage()               {}
func (*BulletMove) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *BulletMove) GetId() float32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BulletMove) GetX() float32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *BulletMove) GetY() float32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *BulletMove) GetZ() float32 {
	if m != nil {
		return m.Z
	}
	return 0
}

func (m *BulletMove) GetV() float32 {
	if m != nil {
		return m.V
	}
	return 0
}

func (m *BulletMove) GetDeleted() bool {
	if m != nil {
		return m.Deleted
	}
	return false
}

type AttackAction struct {
	Pid int32 `protobuf:"varint,1,opt,name=pid" json:"pid,omitempty"`
}

func (m *AttackAction) Reset()                    { *m = AttackAction{} }
func (m *AttackAction) String() string            { return proto.CompactTextString(m) }
func (*AttackAction) ProtoMessage()               {}
func (*AttackAction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *AttackAction) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

type Hit struct {
	HitHp int32 `protobuf:"varint,1,opt,name=hitHp" json:"hitHp,omitempty"`
	Pid   int32 `protobuf:"varint,2,opt,name=pid" json:"pid,omitempty"`
}

func (m *Hit) Reset()                    { *m = Hit{} }
func (m *Hit) String() string            { return proto.CompactTextString(m) }
func (*Hit) ProtoMessage()               {}
func (*Hit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Hit) GetHitHp() int32 {
	if m != nil {
		return m.HitHp
	}
	return 0
}

func (m *Hit) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

type PlayerInfo struct {
	Pid  int32   `protobuf:"varint,1,opt,name=pid" json:"pid,omitempty"`
	X    float32 `protobuf:"fixed32,2,opt,name=x" json:"x,omitempty"`
	Y    float32 `protobuf:"fixed32,3,opt,name=y" json:"y,omitempty"`
	Z    float32 `protobuf:"fixed32,4,opt,name=z" json:"z,omitempty"`
	V    float32 `protobuf:"fixed32,5,opt,name=v" json:"v,omitempty"`
	Dead bool    `protobuf:"varint,6,opt,name=dead" json:"dead,omitempty"`
}

func (m *PlayerInfo) Reset()                    { *m = PlayerInfo{} }
func (m *PlayerInfo) String() string            { return proto.CompactTextString(m) }
func (*PlayerInfo) ProtoMessage()               {}
func (*PlayerInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *PlayerInfo) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *PlayerInfo) GetX() float32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *PlayerInfo) GetY() float32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *PlayerInfo) GetZ() float32 {
	if m != nil {
		return m.Z
	}
	return 0
}

func (m *PlayerInfo) GetV() float32 {
	if m != nil {
		return m.V
	}
	return 0
}

func (m *PlayerInfo) GetDead() bool {
	if m != nil {
		return m.Dead
	}
	return false
}

type ObjInfo struct {
	Id      int32   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	X       float32 `protobuf:"fixed32,2,opt,name=x" json:"x,omitempty"`
	Y       float32 `protobuf:"fixed32,3,opt,name=y" json:"y,omitempty"`
	Z       float32 `protobuf:"fixed32,4,opt,name=z" json:"z,omitempty"`
	V       float32 `protobuf:"fixed32,5,opt,name=v" json:"v,omitempty"`
	Deleted bool    `protobuf:"varint,6,opt,name=deleted" json:"deleted,omitempty"`
}

func (m *ObjInfo) Reset()                    { *m = ObjInfo{} }
func (m *ObjInfo) String() string            { return proto.CompactTextString(m) }
func (*ObjInfo) ProtoMessage()               {}
func (*ObjInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ObjInfo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ObjInfo) GetX() float32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *ObjInfo) GetY() float32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *ObjInfo) GetZ() float32 {
	if m != nil {
		return m.Z
	}
	return 0
}

func (m *ObjInfo) GetV() float32 {
	if m != nil {
		return m.V
	}
	return 0
}

func (m *ObjInfo) GetDeleted() bool {
	if m != nil {
		return m.Deleted
	}
	return false
}

type SkillObjInfo struct {
	Id      int32   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	X       float32 `protobuf:"fixed32,2,opt,name=x" json:"x,omitempty"`
	Y       float32 `protobuf:"fixed32,3,opt,name=y" json:"y,omitempty"`
	Z       float32 `protobuf:"fixed32,4,opt,name=z" json:"z,omitempty"`
	V       float32 `protobuf:"fixed32,5,opt,name=v" json:"v,omitempty"`
	Deleted bool    `protobuf:"varint,6,opt,name=deleted" json:"deleted,omitempty"`
}

func (m *SkillObjInfo) Reset()                    { *m = SkillObjInfo{} }
func (m *SkillObjInfo) String() string            { return proto.CompactTextString(m) }
func (*SkillObjInfo) ProtoMessage()               {}
func (*SkillObjInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *SkillObjInfo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SkillObjInfo) GetX() float32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *SkillObjInfo) GetY() float32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *SkillObjInfo) GetZ() float32 {
	if m != nil {
		return m.Z
	}
	return 0
}

func (m *SkillObjInfo) GetV() float32 {
	if m != nil {
		return m.V
	}
	return 0
}

func (m *SkillObjInfo) GetDeleted() bool {
	if m != nil {
		return m.Deleted
	}
	return false
}

type FrameInfo struct {
	NewPlayer       []*PlayerInfo   `protobuf:"bytes,1,rep,name=newPlayer" json:"newPlayer,omitempty"`
	PlayerMove      []*PlayerInfo   `protobuf:"bytes,2,rep,name=playerMove" json:"playerMove,omitempty"`
	PlayerDead      []*PlayerInfo   `protobuf:"bytes,3,rep,name=playerDead" json:"playerDead,omitempty"`
	AttackAction    []*AttackAction `protobuf:"bytes,4,rep,name=attackAction" json:"attackAction,omitempty"`
	Hit             []*Hit          `protobuf:"bytes,5,rep,name=hit" json:"hit,omitempty"`
	SkillPrepare    []*SkillInfo    `protobuf:"bytes,6,rep,name=skillPrepare" json:"skillPrepare,omitempty"`
	SkillCancel     []*SkillInfo    `protobuf:"bytes,7,rep,name=skillCancel" json:"skillCancel,omitempty"`
	SkillStartUp    []*SkillInfo    `protobuf:"bytes,8,rep,name=skillStartUp" json:"skillStartUp,omitempty"`
	PlayerRelife    []*PlayerInfo   `protobuf:"bytes,9,rep,name=playerRelife" json:"playerRelife,omitempty"`
	ObjBorn         []*ObjInfo      `protobuf:"bytes,10,rep,name=objBorn" json:"objBorn,omitempty"`
	ObjMove         []*ObjInfo      `protobuf:"bytes,11,rep,name=objMove" json:"objMove,omitempty"`
	ObjDeleted      []*ObjInfo      `protobuf:"bytes,12,rep,name=objDeleted" json:"objDeleted,omitempty"`
	SkillObjBorn    []*SkillObjInfo `protobuf:"bytes,13,rep,name=skillObjBorn" json:"skillObjBorn,omitempty"`
	SkillObjMove    []*SkillObjInfo `protobuf:"bytes,14,rep,name=skillObjMove" json:"skillObjMove,omitempty"`
	SkillObjDeleted []*SkillObjInfo `protobuf:"bytes,15,rep,name=skillObjDeleted" json:"skillObjDeleted,omitempty"`
}

func (m *FrameInfo) Reset()                    { *m = FrameInfo{} }
func (m *FrameInfo) String() string            { return proto.CompactTextString(m) }
func (*FrameInfo) ProtoMessage()               {}
func (*FrameInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *FrameInfo) GetNewPlayer() []*PlayerInfo {
	if m != nil {
		return m.NewPlayer
	}
	return nil
}

func (m *FrameInfo) GetPlayerMove() []*PlayerInfo {
	if m != nil {
		return m.PlayerMove
	}
	return nil
}

func (m *FrameInfo) GetPlayerDead() []*PlayerInfo {
	if m != nil {
		return m.PlayerDead
	}
	return nil
}

func (m *FrameInfo) GetAttackAction() []*AttackAction {
	if m != nil {
		return m.AttackAction
	}
	return nil
}

func (m *FrameInfo) GetHit() []*Hit {
	if m != nil {
		return m.Hit
	}
	return nil
}

func (m *FrameInfo) GetSkillPrepare() []*SkillInfo {
	if m != nil {
		return m.SkillPrepare
	}
	return nil
}

func (m *FrameInfo) GetSkillCancel() []*SkillInfo {
	if m != nil {
		return m.SkillCancel
	}
	return nil
}

func (m *FrameInfo) GetSkillStartUp() []*SkillInfo {
	if m != nil {
		return m.SkillStartUp
	}
	return nil
}

func (m *FrameInfo) GetPlayerRelife() []*PlayerInfo {
	if m != nil {
		return m.PlayerRelife
	}
	return nil
}

func (m *FrameInfo) GetObjBorn() []*ObjInfo {
	if m != nil {
		return m.ObjBorn
	}
	return nil
}

func (m *FrameInfo) GetObjMove() []*ObjInfo {
	if m != nil {
		return m.ObjMove
	}
	return nil
}

func (m *FrameInfo) GetObjDeleted() []*ObjInfo {
	if m != nil {
		return m.ObjDeleted
	}
	return nil
}

func (m *FrameInfo) GetSkillObjBorn() []*SkillObjInfo {
	if m != nil {
		return m.SkillObjBorn
	}
	return nil
}

func (m *FrameInfo) GetSkillObjMove() []*SkillObjInfo {
	if m != nil {
		return m.SkillObjMove
	}
	return nil
}

func (m *FrameInfo) GetSkillObjDeleted() []*SkillObjInfo {
	if m != nil {
		return m.SkillObjDeleted
	}
	return nil
}

func init() {
	proto.RegisterType((*SkillInfo)(nil), "ProtoTest.SkillInfo")
	proto.RegisterType((*BulletBorn)(nil), "ProtoTest.BulletBorn")
	proto.RegisterType((*BulletMove)(nil), "ProtoTest.BulletMove")
	proto.RegisterType((*AttackAction)(nil), "ProtoTest.AttackAction")
	proto.RegisterType((*Hit)(nil), "ProtoTest.Hit")
	proto.RegisterType((*PlayerInfo)(nil), "ProtoTest.PlayerInfo")
	proto.RegisterType((*ObjInfo)(nil), "ProtoTest.ObjInfo")
	proto.RegisterType((*SkillObjInfo)(nil), "ProtoTest.SkillObjInfo")
	proto.RegisterType((*FrameInfo)(nil), "ProtoTest.FrameInfo")
}

func init() { proto.RegisterFile("msg2.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 500 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x94, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0x65, 0x3b, 0x4e, 0xea, 0x89, 0x49, 0xd1, 0xaa, 0x88, 0x39, 0x5a, 0x3e, 0xe5, 0x00,
	0x39, 0xa4, 0xe2, 0x9f, 0x38, 0xa5, 0x54, 0x28, 0x1c, 0x10, 0xd1, 0xb6, 0x3c, 0x80, 0x13, 0x6f,
	0xe9, 0x26, 0xae, 0x6d, 0x39, 0x4b, 0x68, 0xfa, 0x76, 0xbc, 0x19, 0xda, 0xb1, 0x1d, 0x6f, 0xa8,
	0x6a, 0x22, 0x04, 0x3d, 0x65, 0xbf, 0xec, 0xef, 0xf3, 0x8c, 0xbf, 0x9d, 0x35, 0xc0, 0xcd, 0xfa,
	0xdb, 0x78, 0x94, 0x17, 0x99, 0xca, 0x98, 0x37, 0xd3, 0x3f, 0x97, 0x62, 0xad, 0xc2, 0x37, 0xe0,
	0x5d, 0xac, 0x64, 0x92, 0x7c, 0x4a, 0xaf, 0x32, 0xf6, 0x14, 0x9c, 0x5c, 0xc6, 0x68, 0x05, 0xd6,
	0xd0, 0xe5, 0x7a, 0xc9, 0x10, 0x7a, 0x6b, 0xbd, 0x2d, 0x63, 0xb4, 0xe9, 0xdf, 0x5a, 0x86, 0x97,
	0x00, 0x67, 0xdf, 0x93, 0x44, 0xa8, 0xb3, 0xac, 0x48, 0xd9, 0x00, 0xec, 0xca, 0x68, 0x73, 0x5b,
	0xc6, 0xcc, 0x07, 0xeb, 0x96, 0x1c, 0x36, 0xb7, 0x6e, 0xb5, 0xda, 0xa2, 0x53, 0xaa, 0xad, 0x56,
	0x77, 0xd8, 0x29, 0xd5, 0x9d, 0x56, 0x1b, 0x74, 0x4b, 0xb5, 0x09, 0xd3, 0xfa, 0xa9, 0x9f, 0xb3,
	0x8d, 0xf8, 0x57, 0x4f, 0xd5, 0x6f, 0x11, 0x8b, 0x44, 0x28, 0x11, 0x63, 0x37, 0xb0, 0x86, 0x47,
	0xbc, 0x96, 0x61, 0x00, 0xfe, 0x44, 0xa9, 0x68, 0xb1, 0x9a, 0x2c, 0x94, 0xcc, 0xd2, 0xfb, 0x09,
	0x84, 0x2f, 0xc1, 0x99, 0x4a, 0xc5, 0x4e, 0xc0, 0xbd, 0x96, 0x6a, 0x9a, 0x57, 0x5b, 0xa5, 0xa8,
	0x71, 0xbb, 0xc1, 0x97, 0x00, 0xb3, 0x24, 0xda, 0x8a, 0xe2, 0x81, 0x40, 0xff, 0xf6, 0x15, 0x18,
	0x74, 0x62, 0x11, 0xd5, 0xfd, 0xd3, 0x3a, 0x5c, 0x41, 0xef, 0xcb, 0x7c, 0x49, 0x85, 0x9a, 0xa4,
	0xdc, 0xff, 0x94, 0x54, 0x0e, 0x3e, 0x0d, 0xca, 0xe3, 0x55, 0xfc, 0xd9, 0x05, 0xef, 0x63, 0x11,
	0xdd, 0x08, 0xaa, 0x77, 0x0a, 0x5e, 0x2a, 0x7e, 0x94, 0xd9, 0xa2, 0x15, 0x38, 0xc3, 0xfe, 0xf8,
	0xd9, 0x68, 0x37, 0xc7, 0xa3, 0x26, 0x74, 0xde, 0x70, 0xec, 0x15, 0x40, 0x4e, 0x2b, 0x3d, 0x4e,
	0x68, 0xb7, 0xb9, 0x0c, 0xb0, 0xb1, 0x9d, 0xeb, 0xc8, 0x9d, 0x03, 0x6c, 0x1a, 0x64, 0xef, 0xc1,
	0x8f, 0x8c, 0x61, 0xc2, 0x0e, 0x19, 0x9f, 0x1b, 0x46, 0x73, 0xd6, 0xf8, 0x1e, 0xcc, 0x02, 0x70,
	0xae, 0xa5, 0x42, 0x97, 0x3c, 0x03, 0xc3, 0x33, 0x95, 0x8a, 0xeb, 0x2d, 0xf6, 0x16, 0x7c, 0xba,
	0x7c, 0xb3, 0x42, 0xe4, 0x51, 0x21, 0xb0, 0x4b, 0xe8, 0x89, 0x81, 0xee, 0x6e, 0x32, 0xdf, 0x23,
	0xd9, 0x6b, 0xe8, 0x93, 0xfe, 0x10, 0xa5, 0x0b, 0x91, 0x60, 0xaf, 0xc5, 0x68, 0x82, 0xbb, 0x8a,
	0x17, 0x2a, 0x2a, 0xd4, 0xd7, 0x1c, 0x8f, 0xfe, 0x58, 0xb1, 0x22, 0xd9, 0x3b, 0xf0, 0xcb, 0x60,
	0xb8, 0x48, 0xe4, 0x95, 0x40, 0xaf, 0x2d, 0xc3, 0x3d, 0x94, 0xbd, 0x80, 0x5e, 0x36, 0x5f, 0xea,
	0xaf, 0x0a, 0x02, 0xb9, 0x98, 0xe1, 0xaa, 0xa6, 0x8f, 0xd7, 0x48, 0x45, 0xd3, 0xf1, 0xf6, 0x5b,
	0x69, 0x3a, 0xd8, 0x31, 0x40, 0x36, 0x5f, 0x9e, 0x57, 0xf3, 0xe6, 0x3f, 0x68, 0x30, 0x28, 0x7d,
	0xaa, 0xeb, 0x6a, 0xf0, 0xa9, 0xa9, 0x27, 0xf7, 0x4e, 0xd5, 0xbc, 0x17, 0x7c, 0x0f, 0x36, 0xcd,
	0xd4, 0xe3, 0xe0, 0x40, 0x33, 0x75, 0x3b, 0x81, 0xe3, 0x5a, 0xd7, 0x2d, 0x1f, 0xb7, 0xfb, 0x7f,
	0xe7, 0xe7, 0x5d, 0xfa, 0xe0, 0x9f, 0xfe, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x89, 0x83, 0x81, 0x3a,
	0xfe, 0x05, 0x00, 0x00,
}
